@using System.Linq;
@model List<ERP.Web.ViewModels.Home.DashboardStackChartViewModel>

@{
    ViewData["Title"] = "Home Page";

    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.DashboardViewModel).ToList());


}



<div class="block-header">
    <h2>Welcome to inventory management system</h2>

</div>
<hr />

@*<div class="jumbotron">
        <h1 class="display-4">Hello, world!</h1>
        <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>
        <hr class="my-4">
        <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>
        <p class="lead">
            <a class="btn btn-primary btn-lg" href="#" role="button">Learn more</a>
        </p>
    </div>*@

<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner" role="listbox">
        <div class="item active">
            <img src="~/images/banner1.svg" alt="ASP.NET" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how to build ASP.NET apps that can run anywhere.
                    <a class="btn btn-default" href="#">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner2.svg" alt="Visual Studio" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    There are powerful new features in Visual Studio for building modern web apps.
                    <a class="btn btn-default" href="#">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner3.svg" alt="Microsoft Azure" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how Microsoft's Azure cloud platform allows you to build, deploy, and scale web apps.
                    <a class="btn btn-default" href="#">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>



<hr />

<div class="container">
    <div class="panel-group">
        <div class="panel panel-primary">
            <div class="panel-heading">Forming Wires Pie Chart By Fabric Type</div>
            <div class="panel-body">

                <div class="chart-container">
                    <canvas id="myChart" style="width:100%; height:500px"></canvas>
                </div>


            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">

    $(function () {

                var ctx = document.getElementById("myChart").getContext("2d");
                var data = {

            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.RegionName).ToList())),

datasets: [{
    label: "MillsCount",
                backgroundColor: "#F29220",
                borderColor: "#F29220",
                data: [60, 80, 70]
            }, {
        label: "TotalAmountEachPiece",
                backgroundColor: "#4365B0",
                borderColor: "#4365B0",
                data: [60, 80, 70]
            }, {
        label: "TotalConsPcsPerYear",
                backgroundColor: "#D00",
                borderColor: "#D00",
                data: [10, 5, 90]
    }

]
        };

            var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: data,
            options: {
            scales: {
                xAxes: [{ stacked: true }],
                    yAxes: [{
                    stacked: true,
                        ticks: {
                        beginAtZero: true
                        }
                    }]
                }
            }
        })
    });


</script>
